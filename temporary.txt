const $ = res.$;
                const $title = $('.fDTGTb');
                //console.log($title.first().contents())
                //const $paragraph = $('.iUikZB .ipc-html-content-inner-div');
                const title = $title.first().contents().filter(function() {
                    return this.type === 'text';
                }).text().trim();
                link=res.request.uri.href
                if (!visitedTitlesPersonal.has(title) || !visitedLinksPersonal.has(link)) {
                    if(pageCounterPersonal<500){
                        visitedLinksPersonal.add(title);
                        visitedTitlesPersonal.add(link);
                        //console.log(title)
                        const genres = [];
                        $('.ipc-chip-list__scroller .ipc-chip--on-baseAlt .ipc-chip__text').each(function(i, element) {
                            const genre = $(element).text();
                            genres.push(genre);
                        });
                        //console.log(genres)
                        //const dateReleased = $('.iwmAVw .ipc-link').first().contents().filter(function(){
                        //    return this.type === 'text';
                        //});
                        //console.log(dateReleased[0].data)
                        let connectedPages = [];
                        //const imdbRating = $('span[itemProp="ratingValue"]').text();
                        //const poster = $('div.poster a img').attr('src');
                        const summary = $('p').text()
                        //console.log(summary);
                        //const summaryLink = $('.gUCZcO .ipc-inline-list__item .ipc-link')
                        pageCounterPersonal++;
                        console.log(pageCounterPersonal)
                        //console.log(summaryLink)
                        $(".celwidget .ipc-poster-card a.ipc-lockup-overlay").each(function (i, link) {
                            const href = $(link).attr("href");
                            if (href) {
                                const absoluteUrl = url.resolve(res.request.uri.href, href);
                                
                                crawler.queue(absoluteUrl);
                                    
                                //console.log(absoluteUrl)
                                // Record the URL of the current page as an outgoing link
                                connectedPages.push(absoluteUrl);

                                // Record the URL of the current page as an incoming link for the linked page
                                //incomingLinks.push(absoluteUrl);
                            }
                        });
                        //console.log(connectedPages)
                    }else {
                        // Stop the crawler if the page limit is reached
                        console.log('Page limit reached. Stopping the crawler.');
                        done(); // Empty queue to stop further crawling
                    }
                    
                }
            }
        }